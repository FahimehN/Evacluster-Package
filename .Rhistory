pre <- predict(cls,testData[,1:4])
View(pre)
pre[["classification"]]
source("~/GitHub/Evacluster-Package/R/FuzzyWrapper.R", echo=TRUE)
cls <- FuzzyCluster(trainData[,1:4],k=3)
pre <- predict(cls,testData[,1:4])
source("~/GitHub/Evacluster-Package/R/EMWrapper.R", echo=TRUE)
clsut <- EMCluster(trainData[,1:4],k=3)
pre <- predict(clsut,testData[,1:4])
View(pre)
pre[["classification"]]
roxygen2::roxygenise()
source("~/GitHub/Evacluster-Package/R/FuzzyWrapper.R", echo=TRUE)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(datasets)
data(iris)
rndSamples <- sample(nrow(iris),100)
trainData <- iris[rndSamples,]
testData <- iris[-rndSamples,]
cls <- FuzzyCluster(trainData[,1:4],k=3)
pre <- predict(cls,testData[,1:4])
source("~/GitHub/Evacluster-Package/R/FuzzyWrapper.R", echo=TRUE)
cls <- FuzzyCluster(trainData[,1:4],k=3)
pre <- predict(cls,testData[,1:4])
source("~/GitHub/Evacluster-Package/R/FuzzyWrapper.R", echo=TRUE)
cls <- FuzzyCluster(trainData[,1:4],k=3)
pre <- predict(cls,testData[,1:4])
source("~/GitHub/Evacluster-Package/R/hierarchicalWrapper.R", echo=TRUE)
cls <- hierarchicalCluster(trainData[,1:4],distmethod="euclidean",k=3)
pre <- predict(cls,testData[,1:4])
source("~/GitHub/Evacluster-Package/R/hierarchicalWrapper.R", echo=TRUE)
cls <- hierarchicalCluster(trainData[,1:4],distmethod="euclidean",k=3)
pre <- predict(cls,testData[,1:4])
source("~/GitHub/Evacluster-Package/R/kmeanWrapper.R", echo=TRUE)
cls <- kmeansCluster(trainData[,1:4],k=3)
pre <- predict(cls,testData[,1:4])
source("~/GitHub/Evacluster-Package/R/nmfWrapper.R", echo=TRUE)
cls <- nmfCluster(trainData[,1:4],rank=3)
pre <- predict(cls,testData[,1:4])
source("~/GitHub/Evacluster-Package/R/hierarchicalWrapper.R", echo=TRUE)
cls <- hierarchicalCluster(trainData[,1:4],distmethod="euclidean",k=3)
pre <- predict(cls,testData[,1:4])
source("~/GitHub/Evacluster-Package/R/tSNEwrapper.R", echo=TRUE)
tsne_trainData <- tsneReductor(trainData[,1:4],dim = 2,perplexity = 25,max_iter = 1000)
tsne_testData <- predict(tsne_trainData,k=3,testData[,1:4])
ccluster <- getConsensusCluster(ClustStab,who="training",thr=seq(0.80,0.25,-0.05))
Data <- read.csv("C:/Semesters/Thesis/Data/Test Data sets/sobar-72.csv")
ClustStab <- clusterStability(data=Data, clustermethod=Mclust, dimenreducmethod="UMAP",n_components = 3,featureselection="YES",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 10,trainFraction = 0.7,G=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="YES",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 10,trainFraction = 0.7,k=3)
cls <- kmeansCluster(trainData[,1:4],k=3)
pre <- predict(cls,testData[,1:4])
Data <- read.csv("C:/Semesters/Thesis/Data/Test Data sets/sobar-72.csv")
View(Data)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="YES",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 10,trainFraction = 0.7,k=3)
source("~/GitHub/Evacluster-Package/R/getConsensusCluster.R", echo=TRUE)
source("~/GitHub/Evacluster-Package/R/clusterStability.r", echo=TRUE)
library(mclust)
Data <- read.csv("C:/Semesters/Thesis/Data/Test Data sets/sobar-72.csv")
ClustStab <- clusterStability(data=Data, clustermethod=Mclust, dimenreducmethod="UMAP"
,n_components = 3,featureselection="YES", outcome="ca_cervix",
fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,G=3)
source("~/GitHub/Evacluster-Package/R/clusterStability.r", echo=TRUE)
source("~/GitHub/Evacluster-Package/R/clusterStability.r", echo=TRUE)
ClustStab <- clusterStability(data=Data, clustermethod=Mclust, dimenreducmethod="UMAP"
,n_components = 3,featureselection="YES", outcome="ca_cervix",
fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,G=3)
ClustStab <- clusterStability(data=Data, clustermethod=Mclust, dimenreducmethod="UMAP"
,n_components = 3,featureselection="YES", outcome="ca_cervix",
fs.pvalue = 0.05,randomTests = 30,trainFraction = 0.7,G=3)
TADPOLE_D1_D2 <- read.csv("C:/Semesters/Alzheimer's Paper/Dataset/TADPOLE_D1_D2.csv")
TADPOLE_D1_D2_Dict <- read.csv("C:/Semesters/Alzheimer's Paper/Dataset/TADPOLE_D1_D2_Dict.csv")
FreeSurferset <- str_detect(colnames(TADPOLE_D1_D2),"UCSFFS")
baselineTadpole <- subset(TADPOLE_D1_D2,VISCODE=="bl")
validBaselineTadpole <- cbind(DX=baselineTadpole$DX_bl,
AGE=baselineTadpole$AGE,
Gender=1*(baselineTadpole$PTGENDER=="Female"),
#                                 ADAS11=baselineTadpole$ADAS11,
#                                 ADAS13=baselineTadpole$ADAS13,
#                                 MMSE=baselineTadpole$MMSE,
#                                 RAVLT_immediate=baselineTadpole$RAVLT_immediate,
#                                 RAVLT_learning=baselineTadpole$RAVLT_learning,
#                                 RAVLT_forgetting=baselineTadpole$RAVLT_forgetting,
#                                 RAVLT_perc_forgetting=baselineTadpole$RAVLT_perc_forgetting,
#                                 FAQ=baselineTadpole$FAQ,
Ventricles=baselineTadpole$Ventricles,
Hippocampus=baselineTadpole$Hippocampus,
WholeBrain=baselineTadpole$WholeBrain,
Entorhinal=baselineTadpole$Entorhinal,
Fusiform=baselineTadpole$Fusiform,
MidTemp=baselineTadpole$MidTemp,
ICV=baselineTadpole$ICV,
baselineTadpole[,FreeSurferset])
rownames(validBaselineTadpole) <- baselineTadpole$RID
nacount <- apply(is.na(validBaselineTadpole),2,sum)/nrow(validBaselineTadpole) < 0.05
diagnose <- validBaselineTadpole$DX
validBaselineTadpole <- validBaselineTadpole[,nacount]
ischar <- sapply(validBaselineTadpole,class) == "character"
validBaselineTadpole <- validBaselineTadpole[,!ischar]
validBaselineTadpole$DX <- diagnose
validBaselineTadpole <- validBaselineTadpole[complete.cases(validBaselineTadpole),]
ischar <- sapply(validBaselineTadpole,class) == "character"
validBaselineTadpole[,!ischar] <- sapply(validBaselineTadpole[,!ischar],as.numeric)
colnames(validBaselineTadpole) <- str_remove_all(colnames(validBaselineTadpole),"_UCSFFSX_11_02_15_UCSFFSX51_08_01_16")
colnames(validBaselineTadpole) <- str_replace_all(colnames(validBaselineTadpole)," ","_")
validBaselineTadpole$LONISID <- NULL
validBaselineTadpole$IMAGEUID <- NULL
validBaselineTadpole$LONIUID <- NULL
validBaselineTadpole$DX <- as.factor(validBaselineTadpole$DX)
datasetframe <- validBaselineTadpole
#### Data ####
BaselineData <- subset(datasetframe,(DX == 3 | DX == 4))
BaselineData$DX <- as.numeric(BaselineData$DX)
BaselineData$DX[BaselineData$DX == 3] <- 0
BaselineData$DX[BaselineData$DX == 4] <- 1
Data <- BaselineData
Data$DX <- NULL
memory.limit(size=50000)
UmapMclust3 <- clusterStability(data=Data, clustermethod=Mclust, dimenreducmethod="UMAP",n_components = 3,featureselection="NO",
randomTests = 10,trainFraction = 0.7,G=3)
source("~/GitHub/Evacluster-Package/R/clusterStability.r", echo=TRUE)
source("~/GitHub/Evacluster-Package/R/clusterStability.r", echo=TRUE)
memory.limit(size=50000)
UmapMclust3 <- clusterStability(data=Data, clustermethod=Mclust, dimenreducmethod="UMAP",n_components = 3,featureselection="NO",
randomTests = 10,trainFraction = 0.7,G=3)
Data <- read.csv("C:/Semesters/Thesis/Data/Test Data sets/sobar-72.csv")
ClustStab <- clusterStability(data=Data, clustermethod=Mclust, dimenreducmethod="UMAP"
,n_components = 3,featureselection="YES", outcome="ca_cervix",
fs.pvalue = 0.05,randomTests = 30,trainFraction = 0.7,G=3)
Data <- read.csv("C:/Semesters/Thesis/Data/Test Data sets/sobar-72.csv")
View(Data)
ClustStab <- clusterStability(data=Data, clustermethod=Mclust, dimenreducmethod="UMAP"
,n_components = 3,featureselection="yes", outcome="ca_cervix",
fs.pvalue = 0.05,randomTests = 30,trainFraction = 0.7,G=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 10,trainFraction = 0.7,k=3)
cls <- kmeansCluster(trainData[,1:4],k=3)
pre <- predict(cls,testData[,1:4])
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 10,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 30,trainFraction = 0.7,k=3)
source("~/GitHub/Evacluster-Package/R/clusterStability.r", echo=TRUE)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 30,trainFraction = 0.7,k=3)
source("~/GitHub/Evacluster-Package/R/clusterStability.r", echo=TRUE)
Data <- read.csv("C:/Semesters/Thesis/Data/Test Data sets/sobar-72.csv")
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 30,trainFraction = 0.7,k=3)
Data <- data.frame(Data)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 30,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 30,trainFraction = 0.7,k=3)
source("~/GitHub/Evacluster-Package/R/clusterStability.r", echo=TRUE)
library(datasets)
data(iris)
rndSamples <- sample(nrow(iris),100)
trainData <- iris[rndSamples,]
testData <- iris[-rndSamples,]
Data <- read.csv("C:/Semesters/Thesis/Data/Test Data sets/sobar-72.csv")
rndSamples <- sample(nrow(Data),50)
trainData <- iris[rndSamples,]
testData <- iris[-rndSamples,]
cls <- kmeansCluster(trainData,k=3)
View(trainData)
rndSamples <- sample(nrow(Data),50)
trainData <- Data[rndSamples,]
testData <- Data[-rndSamples,]
cls <- kmeansCluster(trainData,k=3)
pre <- predict(cls,testData)
View(cls)
cls <- kmeansCluster(trainData,k=3)
pre <- predict(cls,testData)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 30,trainFraction = 0.7,k=3)
source("~/GitHub/Evacluster-Package/R/kmeanWrapper.R", echo=TRUE)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 30,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=Mclust, dimenreducmethod="UMAP"
,n_components = 3,featureselection="yes", outcome="ca_cervix",
fs.pvalue = 0.05,randomTests = 30,trainFraction = 0.7,G=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 30,trainFraction = 0.7,k=3)
source("~/GitHub/Evacluster-Package/R/pamWrapper.R", echo=TRUE)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 30,trainFraction = 0.7,k=3)
source("~/GitHub/Evacluster-Package - Before applying change for clusterstability function/R/pamWrapper.R", echo=TRUE)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 30,trainFraction = 0.7,k=3)
source("~/GitHub/Evacluster-Package/R/pamWrapper.R", echo=TRUE)
memory.limit(size=50000)
pcaPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="NO",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 10,trainFraction = 0.7,k=3)
source("~/GitHub/Evacluster-Package/R/pamWrapper.R", echo=TRUE)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="DX",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
Data <- BaselineData
memory.limit(size=50000)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="DX",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
source("~/GitHub/Evacluster-Package/R/clusterStability.r", echo=TRUE)
memory.limit(size=50000)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="DX",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
plot
Data <- read.csv("C:/Semesters/Thesis/Data/Test Data sets/sobar-72.csv")
View(Data)
Data <- read.csv("C:/Semesters/Thesis/Data/Test Data sets/sobar-72.csv")
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 30,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 30,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 30,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 30,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="no",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="tSNE",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="no",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 30,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="tSNE",n_components = 3,perplexity=5,
max_iter=100,k_neighbor=2,featureselection="no",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="PCA",n_components = 3,perplexity=5,
max_iter=100,k_neighbor=2,featureselection="no",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="PCA",n_components = 3,perplexity=5,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="PCA",n_components = 3,perplexity=5,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="PCA",n_components = 3,perplexity=5,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,perplexity=5,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,perplexity=5,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3,perplexity=5,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="tSNE",n_components = 3,perplexity=5,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="no",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="tSNE",n_components = 3,perplexity=5,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="PCA",n_components = 3,perplexity=5,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="tSNE",n_components = 3,perplexity=5,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="tSNE",n_components = 3,perplexity=5,
max_iter=100,k_neighbor=2,featureselection="no",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
fsUmapPAM3 <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 20,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=Mclust, dimenreducmethod="UMAP",n_components = 3,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,G=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="tSNE",n_components = 3, perplexity=5,max_iter=100,k_neighbor=2,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="tSNE",n_components = 3, perplexity=5,max_iter=100,k_neighbor=2,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 100,trainFraction = 0.7,k=3)
#
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=5,max_iter=100,k_neighbor=2, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=5,max_iter=100,k_neighbor=2, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.01,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=5,max_iter=100,k_neighbor=2, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 100,trainFraction = 0.7,k=3)
source("~/GitHub/Evacluster-Package - Before applying change for clusterstability function/R/kmeanWrapper.R", echo=TRUE)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 100,trainFraction = 0.7,center=3)
source("~/GitHub/Evacluster-Package - Before applying change for clusterstability function/R/kmeanWrapper.R", echo=TRUE)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 100,trainFraction = 0.7,center=3)
source("~/GitHub/Evacluster-Package - Before applying change for clusterstability function/R/kmeanWrapper.R", echo=TRUE)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="tSNE",n_components = 3, perplexity=5,max_iter=100,k_neighbor=2,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="tSNE",n_components = 3, perplexity=5,max_iter=100,k_neighbor=2,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,center=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="tSNE",n_components = 3, perplexity=5,max_iter=20,k_neighbor=2,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,center=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 20,trainFraction = 0.7,center=3)
source("~/GitHub/Evacluster-Package/R/kmeanWrapper.R", echo=TRUE)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 20,trainFraction = 0.7,center=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 20,trainFraction = 0.7,k=3)
#
source("~/GitHub/Evacluster-Package/R/kmeanWrapper.R", echo=TRUE)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 20,trainFraction = 0.7,k=3)
#
source("~/GitHub/Evacluster-Package/R/kmeanWrapper.R", echo=TRUE)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 20,trainFraction = 0.7,k=3)
#
source("~/GitHub/Evacluster-Package - Before applying change for clusterstability function/R/kmeanWrapper.R", echo=TRUE)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 20,trainFraction = 0.7,k=3)
#
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 20,trainFraction = 0.7,3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 20,trainFraction = 0.7,center=3)
source("~/GitHub/Evacluster-Package/R/kmeanWrapper.R", echo=TRUE)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 20,trainFraction = 0.7,center=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 20,trainFraction = 0.7,center=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="tSNE",n_components = 3, perplexity=5,max_iter=20,k_neighbor=2,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,center=3)
source("~/GitHub/Evacluster-Package/R/EMWrapper.R", echo=TRUE)
library(datasets)
data(iris)
rndSamples <- sample(nrow(iris),100)
trainData <- iris[rndSamples,]
testData <- iris[-rndSamples,]
clsut <- EMCluster(trainData[,1:4],k=3)
clsut <- EMCluster(trainData[,1:4],3)
source("~/GitHub/Evacluster-Package/R/EMWrapper.R", echo=TRUE)
clsut <- EMCluster(trainData[,1:4],3)
pre <- predict(clsut,testData[,1:4])
FuzzyCluster <- function(data=NULL,k=NULL)
{
v <- inaparc::kmpp(data,k)$v
u <- inaparc::imembrand(nrow(data),k)$u
fc <- ppclust::fcm(data,centers=v, memberships=u)
source("~/GitHub/Evacluster-Package/R/FuzzyWrapper.R", echo=TRUE)
cls <- FuzzyCluster(trainData[,1:4],k=3)
cls <- FuzzyCluster(trainData[,1:4],3)
pre <- predict(cls,testData[,1:4])
source("~/GitHub/Evacluster-Package/R/hierarchicalWrapper.R", echo=TRUE)
cls <- hierarchicalCluster(trainData[,1:4],distmethod="euclidean",k=3)
cls <- hierarchicalCluster(trainData[,1:4],distmethod="euclidean",3)
cls <- hierarchicalCluster(trainData[,1:4],distmethod="euclidean",3)
pre <- predict(cls,testData[,1:4])
source("~/GitHub/Evacluster-Package/R/kmeanWrapper.R", echo=TRUE)
cls <- kmeansCluster(trainData[,1:4],k=3)
cls <- kmeansCluster(trainData[,1:4],3)
cls <- kmeansCluster(trainData[,1:4],center=3)
pre <- predict(cls,testData[,1:4])
nmfCluster <- function(data=NULL,rank=NULL)
{
nmf <- NMF::nmf(t(data),rank);
source("~/GitHub/Evacluster-Package/R/nmfWrapper.R", echo=TRUE)
cls <- nmfCluster(trainData[,1:4],rank=3)
cls <- nmfCluster(trainData[,1:4],rank=3)
pre <- predict(cls,testData[,1:4])
source("~/GitHub/Evacluster-Package/R/pamWrapper.R", echo=TRUE)
cls <- pamCluster(trainData[,1:4],k=3)
cls <- pamCluster(trainData[,1:4],k=3)
pre <- predict(cls,testData[,1:4])
source("~/GitHub/Evacluster-Package/R/EMWrapper.R", echo=TRUE)
clsut <- EMCluster(trainData[,1:4],k=3)
clsut <- EMCluster(trainData[,1:4],3)
tsne_trainData <- tsneReductor(trainData[,1:4],dim = 2,perplexity = 25,max_iter = 1000)
tsne_testData <- predict(tsne_trainData,k=3,testData[,1:4])
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.02,randomTests = 20,trainFraction = 0.7,center=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="tSNE",n_components = 3, perplexity=5,max_iter=100,k_neighbor=2,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,center=3)
ClustStab <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="PCA",n_components = 3, featureselection="no",randomTests = 100,trainFraction = 0.7,k=3)
cls <- hierarchicalCluster(trainData[,1:4],distmethod="euclidean",3)
View(Data)
ClustStab <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="PCA",n_components = 3, featureselection="no",randomTests = 100,trainFraction = 0.7,k=3)
cls <- hierarchicalCluster(Data[,1:19],distmethod="euclidean",3)
ClustStab <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="PCA",n_components = 3, featureselection="no",randomTests = 100,trainFraction = 0.7,3)
pcaData <- stats::prcomp(Data,rank. = 3)
View(pcaData)
pcaData[["x"]]
cls <- hierarchicalCluster(trainData[,1:4],distmethod="euclidean",3)
cls <- hierarchicalCluster(trainData[,1:4],distmethod="euclidean",3)
pre <- predict(cls,testData[,1:4])
source("~/GitHub/Evacluster-Package/R/clusterStability.r", echo=TRUE)
cls <- hierarchicalCluster(trainData[,1:4],distmethod="euclidean",3)
ClustStab <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="PCA",n_components = 3, featureselection="no",distmethod="euclidean",randomTests = 100,trainFraction = 0.7,3)
ClustStab <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="no",distmethod="euclidean",randomTests = 100,trainFraction = 0.7,3)
cls <- hierarchicalCluster(Data[,1:19],distmethod="euclidean",3)
ClustStab <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="no",distmethod="euclidean",randomTests = 100,trainFraction = 0.7,k=3)
cls <- hierarchicalCluster(Data[,1:19],distmethod="euclidean",3)
pcaData <- stats::prcomp(Data,rank. = 3)
cls <- hierarchicalCluster(pcaData$x,distmethod="euclidean",3)
View(cls)
cls[["classification"]]
ClustStab <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="no",distmethod="euclidean",randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="no",distmethod="euclidean",randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="tSNE",n_components = 3, perplexity=5,max_iter=100,k_neighbor=2,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,k=3)
source("~/GitHub/Evacluster-Package/R/clusterStability.r", echo=TRUE)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="tSNE",n_components = 3, perplexity=5,max_iter=100,k_neighbor=2,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="no",distmethod="euclidean",randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="no",randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="tSNE",n_components = 3, perplexity=5,max_iter=100,k_neighbor=2,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,center=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="no", fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,center=3)
ClustStab <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="no", fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,center=3)
ClustStab <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="no", fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,distmethod="euclidean",k=3)
source("~/GitHub/Evacluster-Package/R/clusterStability.r", echo=TRUE)
source("~/GitHub/Evacluster-Package/R/clusterStability.r", echo=TRUE)
ClustStab <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="no", fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,distmethod="euclidean",k=3)
source("~/GitHub/Evacluster-Package/R/clusterStability.r", echo=TRUE)
ClustStab <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="no", fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,distmethod="euclidean",k=3)
ClustStab <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="no",randomTests = 100,trainFraction = 0.7,distmethod="euclidean",k=3)
ClustStab <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="no",randomTests = 100,trainFraction = 0.7,distmethod="euclidean",k=3)
fsUmapHC3 <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="DX",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,distmethod="euclidean",k=3)
fsUmapHC3 <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,distmethod="euclidean",k=3)
fsUmapHC3 <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 20,trainFraction = 0.7,distmethod="euclidean",k=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="tSNE",n_components = 3, perplexity=5,max_iter=100,k_neighbor=2,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="PCA",n_components = 3, perplexity=5,max_iter=100,k_neighbor=2,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="UMAP",n_components = 3, perplexity=5,max_iter=50,k_neighbor=2,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3, perplexity=5,max_iter=50,k_neighbor=2,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 20,trainFraction = 0.7,k=3)
source("~/GitHub/Evacluster-Package/R/hierarchicalWrapper.R", echo=TRUE)
cls <- hierarchicalCluster(trainData[,1:4],distmethod="euclidean",3)
cls <- hierarchicalCluster(trainData[,1:4],distmethod="euclidean",k=3)
source("~/GitHub/Evacluster-Package/R/hierarchicalWrapper.R", echo=TRUE)
cls <- hierarchicalCluster(trainData[,1:4],distmethod="euclidean",k=3)
fsUmapHC3 <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 20,trainFraction = 0.7,distmethod="euclidean",k=3)
fsUmapHC3 <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 20,trainFraction = 0.7,distmethod="euclidean",k=3)
fsUmapHC3 <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="no",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 20,trainFraction = 0.7,distmethod="euclidean",k=3)
fsUmapHC3 <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="no",
outcome="ca_cervix",randomTests = 20,trainFraction = 0.7,distmethod="euclidean",k=3)
fsUmapHC3 <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,k_neighbor=2,featureselection="no",randomTests = 20,trainFraction = 0.7,distmethod="euclidean",k=3)
fsUmapHC3 <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,perplexity=25,
max_iter=100,featureselection="no",randomTests = 20,trainFraction = 0.7,distmethod="euclidean",k=3)
fsUmapHC3 <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="no",randomTests = 20,trainFraction = 0.7,distmethod="euclidean",k=3)
source("~/GitHub/Evacluster-Package/R/hierarchicalWrapper.R", echo=TRUE)
source("~/GitHub/Evacluster-Package/R/hierarchicalWrapper.R", echo=TRUE)
cls <- hierarchicalCluster(trainData[,1:4],distmethod="euclidean",k=3)
pre <- predict(cls,testData[,1:4])
View(cls)
cls[["classification"]]
fsUmapHC3 <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="no",randomTests = 20,trainFraction = 0.7,distmethod="euclidean",k=3)
source("~/GitHub/Evacluster-Package/R/clusterStability.r", echo=TRUE)
fsUmapHC3 <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="no",randomTests = 20,trainFraction = 0.7,distmethod="euclidean",k=3)
fsUmapHC3 <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="no",randomTests = 20,trainFraction = 0.7,distmethod="euclidean",k=3)
fsUmapHC3 <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="no",randomTests = 20,trainFraction = 0.7,distmethod="euclidean",k=3)
source("~/GitHub/Evacluster-Package/R/hierarchicalWrapper.R", echo=TRUE)
cls <- hierarchicalCluster(pcaData$x,distmethod="euclidean",clusters=3)
fsUmapHC3 <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="no",randomTests = 20,trainFraction = 0.7,distmethod="euclidean",clusters=3)
cls <- hierarchicalCluster(pcaData$x,distmethod="euclidean",clusters=3)
cls <- hierarchicalCluster(trainData[,1:4],distmethod="euclidean",clusters=3)
pre <- predict(cls,testData[,1:4])
ClustStab <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="PCA",n_components = 3,featureselection="no",randomTests = 100,trainFraction = 0.7,distmethod="euclidean",clusters=3)
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="tSNE",n_components = 3, perplexity=5,max_iter=100,k_neighbor=2,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,k=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 100,trainFraction = 0.7,center=3)
library(datasets)
data(iris)
rndSamples <- sample(nrow(iris),100)
trainData <- iris[rndSamples,]
testData <- iris[-rndSamples,]
clsut <- EMCluster(trainData[,1:4],k=3)
library(datasets)
data(iris)
rndSamples <- sample(nrow(iris),100)
trainData <- iris[rndSamples,]
testData <- iris[-rndSamples,]
clsut <- EMCluster(trainData[,1:4],3)
cls <- FuzzyCluster(trainData[,1:4],3)
pre <- predict(cls,testData[,1:4])
ClustStab <- clusterStability(data=Data, clustermethod=pamCluster, dimenreducmethod="UMAP",n_components = 3, featureselection="no",randomTests = 100,trainFraction = 0.7,k=3)
fsUmapHC3 <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="UMAP",n_components = 3,featureselection="yes",
outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 20,trainFraction = 0.7,distmethod="euclidean",k=3)
ClustStab <- clusterStability(data=Data, clustermethod=hierarchicalCluster, dimenreducmethod="PCA",n_components = 3,featureselection="no",randomTests = 100,trainFraction = 0.7,distmethod="euclidean",clusters=3)
ClustStab <- clusterStability(data=Data, clustermethod=kmeansCluster, dimenreducmethod="tSNE",n_components = 3, perplexity=5,max_iter=20,k_neighbor=2,featureselection="yes", outcome="ca_cervix",fs.pvalue = 0.05,randomTests = 20,trainFraction = 0.7,center=3)
cls <- nmfCluster(trainData[,1:4],rank=3)
pre <- predict(cls,testData[,1:4])
library(Evacluster)
source("~/GitHub/Evacluster-Package/R/EMWrapper.R", echo=TRUE)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
